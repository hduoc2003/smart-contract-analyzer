user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1204;
    # multi_accept on;
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;

    ##
    # Gzip Settings
    ##

    gzip on;

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Virtual Host Configs
    ##
    server {
        listen 80;
        listen [::]:80;
        server_name localhost 127.0.0.1;

        # Cấu hình Socket
        location /socket.io {
            include proxy_params;
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_pass http://localhost:5000/socket.io;
        }

        # Cấu hình server backend
        location /api {
            include proxy_params;
            proxy_pass http://localhost:5000/api;
        }

        # Cấu hình đường dẫn static frontend
        location / {
            root /app/frontend/out;
            rewrite ^(/.*)\.html(\?.*)?$ $1$2 permanent;
            rewrite ^/(.*)/+$ /$1 permanent;
            try_files $uri/index.html $uri.html $uri/ $uri /404.html;


            autoindex on;
            allow all;
        }

        # Cấu hình Log
        error_log /dev/stderr warn;
        access_log /dev/stdout;
    }
}
